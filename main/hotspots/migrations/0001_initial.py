# Generated by Django 5.2.1 on 2025-06-02 16:26

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='HotspotLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('address', models.TextField()),
                ('latitude', models.DecimalField(decimal_places=6, max_digits=9, validators=[django.core.validators.MinValueValidator(-90), django.core.validators.MaxValueValidator(90)])),
                ('longitude', models.DecimalField(decimal_places=6, max_digits=9, validators=[django.core.validators.MinValueValidator(-180), django.core.validators.MaxValueValidator(180)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Hotspot Location',
                'verbose_name_plural': 'Hotspot Locations',
                'indexes': [models.Index(fields=['latitude', 'longitude'], name='hotspots_ho_latitud_36549d_idx')],
            },
        ),
        migrations.CreateModel(
            name='Hotspot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ssid', models.CharField(max_length=32)),
                ('password', models.CharField(blank=True, max_length=64)),
                ('hotspot_type', models.CharField(choices=[('PUB', 'Public'), ('PRI', 'Private'), ('COM', 'Commercial')], default='PUB', max_length=3)),
                ('max_users', models.PositiveIntegerField(default=10, validators=[django.core.validators.MinValueValidator(1)])),
                ('bandwidth_limit', models.PositiveIntegerField(default=10, help_text='Mbps per user')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('owner', models.ForeignKey(limit_choices_to={'user_type__in': [1, 2]}, on_delete=django.db.models.deletion.CASCADE, related_name='hotspots', to=settings.AUTH_USER_MODEL)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='hotspots', to='hotspots.hotspotlocation')),
            ],
            options={
                'verbose_name': 'Hotspot',
                'verbose_name_plural': 'Hotspots',
                'unique_together': {('owner', 'ssid')},
            },
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField(auto_now_add=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('data_used', models.PositiveIntegerField(default=0, help_text='Data used in MB')),
                ('ip_address', models.GenericIPAddressField()),
                ('mac_address', models.CharField(blank=True, max_length=17)),
                ('is_active', models.BooleanField(default=True)),
                ('hotspot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='hotspots.hotspot')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Session',
                'verbose_name_plural': 'Sessions',
                'ordering': ['-start_time'],
            },
        ),
    ]
